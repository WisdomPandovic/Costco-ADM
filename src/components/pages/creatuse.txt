import AsideBar from "../pages/AsideBar";
import { useState } from "react";
import axios from "axios";

function CreateUsers() {
  const [user, setUser] = useState({
    avatar: "",
    name: "",
    phoneNumber: "",
    email: "",
    password: "",
  });

  // const submitForm = (e) => {
  //   e.preventDefault();
  //   const userData = {
  //     avatar: user.avatar,
  //     name: user.name,
  //     phoneNumber: user.phoneNumber,
  //     email: user.email,
  //     password: user.password,
  //     membershipNumber: user.membershipNumber,
  //     product:[]
  //   };

  //   // console.log(user);
  //   // console.log(userData);

  //   axios
  //     .post("http://localhost:3008/admin-users", userData)
  //     .then((res) => {
  //       alert("successful")
  //       setUser({
  //           avatar: "",
  //            name: "",
  //            phoneNumber: "",
  //            email: "",
  //            password: "",
  //            membershipNumber: "",
  //        });
  //     })
  //     .catch((err) => {
  //      console.log(err.response.data || "Code 500: Internal Server Error")
  //     })
   
  // };

  const submitForm = (e) => {
    e.preventDefault();
    const formData = new FormData();
    formData.append('avatar', user.avatar);
    formData.append('name', user.name);
    formData.append('phoneNumber', user.phoneNumber);
    formData.append('email', user.email);
    formData.append('password', user.password);

    axios
      .post("http://localhost:3008/admin-users", formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        }
      })
      .then((res) => {
        alert("successful")
        setUser({
          avatar: "",
          name: "",
          phoneNumber: "",
          email: "",
          password: "",
          membershipNumber: "",
        });
      })
      .catch((err) => {
        console.log(err.response.data || "Code 500: Internal Server Error")
      });
  };
  return (
    <div>
      <AsideBar />
      <form className="form-content"  encType="multipart/form-data" onSubmit={submitForm}>
        <div className="form-control">
          <label htmlFor="first_name">Name</label>
          <input type="text" value={user.name} onChange={(e) => setUser({ ...user, name: e.target.value })}/>
        </div>

        <div className="form-control">
          <label htmlFor="phone">Phone Number</label>
          <input type="text" value={user.phoneNumber} onChange={(e) => setUser({ ...user, phoneNumber: e.target.value })}/>
        </div>

        <div className="form-control">
          <label htmlFor="email">Email</label>
          <input type="text" value={user.email} onChange={(e) => setUser({ ...user, email: e.target.value })}/>
        </div>

        <div className="form-control">
          <label htmlFor="password">Password</label>
          <input type="text" value={user.password} onChange={(e) => setUser({ ...user, password: e.target.value })}/>
        </div>

        <div className="form-control">
           <label htmlFor="">Avatar</label>
           <input type="file"  name="avatar" value={user.avatar} onChange={(e) => setUser({ ...user, avatar: e.target.files[0] })} />
        </div>

        {/* <input type="file" name="avatar" onChange={handleFileUpload} /> */}

        
        <div className="form-btn">
          <button>Submit</button>
        </div>
      </form>
    </div>
  );
}

export default CreateUsers;
